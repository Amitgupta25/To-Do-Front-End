{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/Task_1/task_management_ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from \"./components/list/create\";\nimport TaskList from \"./components/list\";\nimport TaskModal from \"./components/TaskModal\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState();\n  const [callApi, setCallApi] = useState(false);\n  const [taskData, setTaskData] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch tasks from the server on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get('http://localhost:3000/tasks');\n        setTasks(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.tasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Function to add a new task to the list\n  const handleCreateTask = newTask => setCallApi(!callApi);\n\n  // Function to update the status of a task\n  const handleUpdateTask = async taskId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/tasks/${taskId}`);\n      setTaskData(response.data);\n      // setCallApi(!callApi)\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n    // try {\n    //   await axios.put(`http://localhost:3000/tasks/${taskId}`, {\n    //     status: 'In Progress'\n    //   });\n    //   setCallApi(!callApi)\n    // } catch (error) {\n    //   console.error('Error updating task:', error);\n    // }\n  };\n\n  // Function to delete a task\n  const handleDeleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:3000/tasks/${taskId}`);\n      setCallApi(!callApi);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onCreateTask: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), taskData && /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 20\n    }, this), tasks && /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onUpdateTask: handleUpdateTask,\n      onDeleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rF6nWBi5KsPmYw/1BXxR+1NW6+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskForm","TaskList","TaskModal","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","callApi","setCallApi","taskData","setTaskData","isModalOpen","setIsModalOpen","fetchTasks","_response$data","response","get","data","error","console","handleCreateTask","newTask","handleUpdateTask","taskId","handleDeleteTask","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreateTask","onUpdateTask","onDeleteTask","_c","$RefreshReg$"],"sources":["/home/deq/Desktop/Task_1/task_management_ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from \"./components/list/create\";\nimport TaskList from \"./components/list\";\nimport TaskModal from \"./components/TaskModal\";\nimport './App.css'\n\nconst App = () => {\n  const [tasks, setTasks] = useState();\n  const [callApi, setCallApi] = useState(false)\n  const [taskData, setTaskData] = useState()\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch tasks from the server on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/tasks');\n        setTasks(response?.data?.tasks)\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  // Function to add a new task to the list\n  const handleCreateTask = (newTask) => \n    setCallApi(!callApi)\n  \n  // Function to update the status of a task\n  const handleUpdateTask = async (taskId) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/tasks/${taskId}`);\n      setTaskData(response.data)\n      // setCallApi(!callApi)\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n    // try {\n    //   await axios.put(`http://localhost:3000/tasks/${taskId}`, {\n    //     status: 'In Progress'\n    //   });\n    //   setCallApi(!callApi)\n    // } catch (error) {\n    //   console.error('Error updating task:', error);\n    // }\n  };\n\n  // Function to delete a task\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:3000/tasks/${taskId}`);\n      setCallApi(!callApi)\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Management</h1>\n      <TaskForm onCreateTask={handleCreateTask} />\n      {taskData && <TaskForm />}\n      {tasks && <TaskList tasks={tasks} onUpdateTask={handleUpdateTask} onDeleteTask={handleDeleteTask} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}