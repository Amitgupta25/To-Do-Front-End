{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/Task_1/task_management_ui/src/components/list/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onUpdateTask,\n  onDeleteTask\n}) => {\n  _s();\n  const [statusFilter, setStatusFilter] = useState('All');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  // Filter tasks based on the selected status\n  useEffect(() => {\n    if (statusFilter === 'All') {\n      setFilteredTasks(tasks);\n    } else {\n      const filtered = tasks.filter(task => task.status === statusFilter);\n      setFilteredTasks(filtered);\n    }\n  }, [tasks, statusFilter]);\n\n  // Handle status filter change\n  const handleStatusFilterChange = e => {\n    setStatusFilter(e.target.value);\n  };\n\n  // Fetch tasks based on the selected status\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/tasks?status=${statusFilter}`);\n        setFilteredTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [statusFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status-filter\",\n        children: \"Filter by Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status-filter\",\n        value: statusFilter,\n        onChange: handleStatusFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (filteredTasks === null || filteredTasks === void 0 ? void 0 : filteredTasks.length) !== 0 && filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", status[task.status]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onUpdateTask(task.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"49v/gTQs9xua6aKPqJEiBr0XDJM=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","tasks","onUpdateTask","onDeleteTask","_s","statusFilter","setStatusFilter","filteredTasks","setFilteredTasks","filtered","filter","task","status","handleStatusFilterChange","e","target","value","fetchTasks","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","length","map","title","description","onClick","_c","$RefreshReg$"],"sources":["/home/deq/Desktop/Task_1/task_management_ui/src/components/list/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TaskList = ({ tasks, onUpdateTask, onDeleteTask }) => {\n  const [statusFilter, setStatusFilter] = useState('All');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  // Filter tasks based on the selected status\n  useEffect(() => {\n    if (statusFilter === 'All') {\n      setFilteredTasks(tasks);\n    } else {\n      const filtered = tasks.filter(task => task.status === statusFilter);\n      setFilteredTasks(filtered);\n    }\n  }, [tasks, statusFilter]);\n\n  // Handle status filter change\n  const handleStatusFilterChange = (e) => {\n    setStatusFilter(e.target.value);\n  };\n\n  // Fetch tasks based on the selected status\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/tasks?status=${statusFilter}`);\n        setFilteredTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, [statusFilter]);\n\n  return (\n    <div>\n      <h2>Task List</h2>\n      <div>\n        <label htmlFor=\"status-filter\">Filter by Status: </label>\n        <select id=\"status-filter\" value={statusFilter} onChange={handleStatusFilterChange}>\n          <option value=\"All\">All</option>\n          <option value=\"0\">To Do</option>\n          <option value=\"1\">In Progress</option>\n          <option value=\"2\">Done</option>\n        </select>\n      </div>\n      <ul>\n        {filteredTasks?.length !== 0 && filteredTasks.map(task => (\n          <li key={task.id}>\n            <div>\n              <strong>{task.title}</strong>\n              <p>{task.description}</p>\n              <p>Status: {status[task.status]}</p>\n            </div>\n            <div>\n              <button onClick={() => onUpdateTask(task.id)}>Edit</button>\n              <button onClick={() => onDeleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}