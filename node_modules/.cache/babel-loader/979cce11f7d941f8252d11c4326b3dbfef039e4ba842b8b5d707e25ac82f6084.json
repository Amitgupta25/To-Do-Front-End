{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/Task_1/task_management_ui/src/components/list/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onUpdateTask,\n  onDeleteTask\n}) => {\n  _s();\n  const [statusFilter, setStatusFilter] = useState('All');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  // Filter tasks based on the selected status\n  // useEffect(() => {\n  //   if (statusFilter === 'All') {\n  //     setFilteredTasks(tasks);\n  //   } else {\n  //     const filtered = tasks.filter(task => task.status === statusFilter);\n  //     setFilteredTasks(filtered);\n  //   }\n  // }, [tasks, statusFilter]);\n\n  // Handle status filter change\n  const handleStatusFilterChange = e => {\n    setStatusFilter(e.target.value);\n  };\n\n  // Fetch tasks based on the selected status\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get(`http://localhost:3000/tasks?status=${statusFilter}`);\n        console.log(\"test\", response.data);\n        setFilteredTasks((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.tasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [statusFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status-filter\",\n        children: \"Filter by Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status-filter\",\n        value: statusFilter,\n        onChange: handleStatusFilterChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (filteredTasks === null || filteredTasks === void 0 ? void 0 : filteredTasks.length) !== 0 && (filteredTasks === null || filteredTasks === void 0 ? void 0 : filteredTasks.map(task => {\n        const status = {\n          0: \"To Do\",\n          1: \"In Progress\",\n          2: \"Done\"\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", status[task.status]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onUpdateTask(task.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDeleteTask(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"DPe6jGLeJjuX6Klhpbw/Sc1es6w=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","tasks","onUpdateTask","onDeleteTask","_s","statusFilter","setStatusFilter","filteredTasks","setFilteredTasks","handleStatusFilterChange","e","target","value","fetchTasks","_response$data","response","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","length","map","task","status","title","description","onClick","_c","$RefreshReg$"],"sources":["/home/deq/Desktop/Task_1/task_management_ui/src/components/list/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TaskList = ({ tasks, onUpdateTask, onDeleteTask }) => {\n  const [statusFilter, setStatusFilter] = useState('All');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n\n  // Filter tasks based on the selected status\n  // useEffect(() => {\n  //   if (statusFilter === 'All') {\n  //     setFilteredTasks(tasks);\n  //   } else {\n  //     const filtered = tasks.filter(task => task.status === statusFilter);\n  //     setFilteredTasks(filtered);\n  //   }\n  // }, [tasks, statusFilter]);\n\n  // Handle status filter change\n  const handleStatusFilterChange = (e) => {\n    setStatusFilter(e.target.value);\n  };\n\n  // Fetch tasks based on the selected status\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/tasks?status=${statusFilter}`);\n        console.log(\"test\", response.data)\n\n        setFilteredTasks(response.data?.tasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, [statusFilter]);\n\n  return (\n    <div>\n      <h2>Task List</h2>\n      <div>\n        <label htmlFor=\"status-filter\">Filter by Status: </label>\n        <select id=\"status-filter\" value={statusFilter} onChange={handleStatusFilterChange}>\n          <option value=\"All\">All</option>\n          <option value=\"0\">To Do</option>\n          <option value=\"1\">In Progress</option>\n          <option value=\"2\">Done</option>\n        </select>\n      </div>\n      <ul>\n        {filteredTasks?.length !== 0 && filteredTasks?.map(task => {\n          const status = {\n            0: \"To Do\",\n            1: \"In Progress\",\n            2: \"Done\"\n          }\n\n          return <li key={task.id}>\n            <div>\n              <strong>{task.title}</strong>\n              <p>{task.description}</p>\n              <p>Status: {status[task.status]}</p>\n            </div>\n            <div>\n              <button onClick={() => onUpdateTask(task.id)}>Edit</button>\n              <button onClick={() => onDeleteTask(task.id)}>Delete</button>\n            </div>\n          </li>\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}