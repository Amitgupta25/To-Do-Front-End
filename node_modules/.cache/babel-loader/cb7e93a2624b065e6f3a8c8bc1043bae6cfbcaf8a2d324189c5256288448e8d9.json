{"ast":null,"code":"var _jsxFileName = \"/home/deq/Desktop/Task_1/task_management_ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from \"./components/list/create\";\nimport TaskList from \"./components/list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState();\n\n  // Fetch tasks from the server on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get('http://localhost:3000/tasks');\n        setTasks(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.tasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Function to add a new task to the list\n  const handleCreateTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n\n  // Function to update the status of a task\n  const handleUpdateTask = async taskId => {\n    try {\n      var _response$data2;\n      // Update task status\n      await axios.put(`http://localhost:3000/tasks/${taskId}`, {\n        status: 'In Progress' // Update status to 'In Progress'\n      });\n\n      // Fetch updated task list from the server\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.tasks);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // Function to delete a task\n  const handleDeleteTask = async taskId => {\n    try {\n      // Delete task\n      await axios.delete(`http://localhost:3000/tasks/${taskId}`);\n\n      // Fetch updated task list from the server\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response === null || response === void 0 ? void 0 : response.data.tasks);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onCreateTask: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), tasks && /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onUpdateTask: handleUpdateTask,\n      onDeleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f9Fi0H+qFM6tyK2dT47Ic2JZ2BU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","_response$data","response","get","data","error","console","handleCreateTask","newTask","handleUpdateTask","taskId","_response$data2","put","status","handleDeleteTask","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreateTask","onUpdateTask","onDeleteTask","_c","$RefreshReg$"],"sources":["/home/deq/Desktop/Task_1/task_management_ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from \"./components/list/create\";\nimport TaskList from \"./components/list\"\n\nconst App = () => {\n  const [tasks, setTasks] = useState();\n\n  // Fetch tasks from the server on component mount\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/tasks');\n        setTasks(response?.data?.tasks)\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  // Function to add a new task to the list\n  const handleCreateTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  // Function to update the status of a task\n  const handleUpdateTask = async (taskId) => {\n    try {\n      // Update task status\n      await axios.put(`http://localhost:3000/tasks/${taskId}`, {\n        status: 'In Progress' // Update status to 'In Progress'\n      });\n\n      // Fetch updated task list from the server\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response?.data?.tasks);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // Function to delete a task\n  const handleDeleteTask = async (taskId) => {\n    try {\n      // Delete task\n      await axios.delete(`http://localhost:3000/tasks/${taskId}`);\n\n      // Fetch updated task list from the server\n      const response = await axios.get('http://localhost:3000/tasks');\n      setTasks(response?.data.tasks);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Management</h1>\n      <TaskForm onCreateTask={handleCreateTask} />\n      {tasks && <TaskList tasks={tasks} onUpdateTask={handleUpdateTask} onDeleteTask={handleDeleteTask} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}